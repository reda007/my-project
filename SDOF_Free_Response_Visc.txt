function x_vec=SDOF_Free_Response_Visc_2_40(w_n,zeta,x0,v0,t_vec)

wd=w_n*sqrt(1-zeta^2);
A=sqrt(x0^2+(v0/w_n)^2);
B=sqrt(x0^2*w_n^2+2*zeta*w_n*x0*v0+v0^2)/(w_n*sqrt(1-zeta^2));
C=((sqrt(zeta^2-1)-zeta)*w_n*x0-v0)/2*w_n/sqrt(zeta^2-1);
D=((sqrt(zeta^2-1)+zeta)*w_n*x0+v0)/2*w_n/sqrt(zeta^2-1);

for n=1:length(t_vec)
    if (zeta==0)
        theta(n)=atan2(x0*w_n,v0);
        phi(n)=atan2(x0*w_n*sqrt(1-zeta^2),zeta*w_n*x0+v0);
        x_vec(n)=A*sin(w_n*t_vec(n)+theta(n));
       
    elseif (zeta<1)
      theta(n)=atan2(x0*w_n,v0);
        phi(n)=atan2(x0*w_n*sqrt(1-zeta^2),zeta*w_n*x0+v0);
        x_vec(n)=B*exp(-zeta*w_n*t_vec(n))*sin(wd*t_vec(n)+phi(n));
       
    elseif (zeta==1)
        x_vec(n)=exp(-w_n*t_vec(n))*(x0+(w_n*x0+v0)*t_vec(n));
      
    elseif (zeta>1)
        x_vec(n)=exp(-w_n*t_vec(n)*zeta)*(C*exp(-w_n*sqrt(zeta^2-1)*t_vec(n))+D*exp(w_n*sqrt(zeta^2-1)*t_vec(n)));
       
    end
end
hgfss